; ModuleID = 'test'
source_filename = "test"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #0

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare dso_local noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: uwtable
declare dso_local dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) local_unnamed_addr #4 align 2

define void @testfn(%"class.std::vector"* %_param_0, %"class.std::vector"* nocapture readonly %_param_1) local_unnamed_addr personality i32 (...)* @__gxx_personality_v0 {
entry:
  %var_2 = alloca %"class.std::vector", align 8
  %0 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %_param_1, i64 0, i32 0, i32 0, i32 1
  %1 = bitcast i32** %0 to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !4
  %3 = bitcast %"class.std::vector"* %_param_1 to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !10
  %5 = sub i64 %2, %4
  %6 = ashr exact i64 %5, 2
  %7 = bitcast %"class.std::vector"* %var_2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %7, i8 0, i64 24, i1 false) #5
  %8 = icmp eq i64 %5, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %entry
  %10 = icmp ugt i64 %6, 4611686018427387903
  br i1 %10, label %11, label %12

11:                                               ; preds = %9
  tail call void @_ZSt17__throw_bad_allocv() #6
  unreachable

12:                                               ; preds = %9
  %13 = tail call i8* @_Znwm(i64 %5)
  %14 = bitcast i8* %13 to i32*
  br label %15

15:                                               ; preds = %12, %entry
  %16 = phi i32* [ %14, %12 ], [ null, %entry ]
  %17 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %var_2, i64 0, i32 0, i32 0, i32 0
  store i32* %16, i32** %17, align 8, !tbaa !10
  %18 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %var_2, i64 0, i32 0, i32 0, i32 1
  store i32* %16, i32** %18, align 8, !tbaa !4
  %19 = getelementptr inbounds i32, i32* %16, i64 %6
  %20 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %var_2, i64 0, i32 0, i32 0, i32 2
  store i32* %19, i32** %20, align 8, !tbaa !11
  %21 = getelementptr %"class.std::vector", %"class.std::vector"* %_param_1, i64 0, i32 0, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8, !tbaa !12
  %23 = load i64, i64* %1, align 8, !tbaa !12
  %24 = ptrtoint i32* %22 to i64
  %25 = sub i64 %23, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %_ZN7PochiVM16ReflectionHelper26constructor_wrapper_helperISt6vectorIiSaIiEEJRKS4_EE4callIJPS5_EEEvPS4_DpT_.exit, label %28

28:                                               ; preds = %15
  %29 = bitcast i32* %16 to i8*
  %30 = bitcast i32* %22 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 %25, i1 false) #5
  br label %_ZN7PochiVM16ReflectionHelper26constructor_wrapper_helperISt6vectorIiSaIiEEJRKS4_EE4callIJPS5_EEEvPS4_DpT_.exit

_ZN7PochiVM16ReflectionHelper26constructor_wrapper_helperISt6vectorIiSaIiEEJRKS4_EE4callIJPS5_EEEvPS4_DpT_.exit: ; preds = %15, %28
  %31 = getelementptr inbounds i32, i32* %16, i64 %26
  store i32* %31, i32** %18, align 8, !tbaa !4
  %32 = invoke dereferenceable(24) %"class.std::vector"* @_ZNSt6vectorIiSaIiEEaSERKS1_(%"class.std::vector"* %_param_0, %"class.std::vector"* nonnull dereferenceable(24) %var_2)
          to label %_Z13CopyVectorIntPSt6vectorIiSaIiEES2_.exit unwind label %landing_pad_0

landing_pad_0:                                    ; preds = %_ZN7PochiVM16ReflectionHelper26constructor_wrapper_helperISt6vectorIiSaIiEEJRKS4_EE4callIJPS5_EEEvPS4_DpT_.exit
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = load i32*, i32** %17, align 8, !tbaa !10
  %35 = icmp eq i32* %34, null
  br i1 %35, label %_ZN7PochiVM16ReflectionHelper25destructor_wrapper_helperISt6vectorIiSaIiEEE9wrapperFnEPS4_.exit, label %36

36:                                               ; preds = %landing_pad_0
  %37 = bitcast i32* %34 to i8*
  call void @_ZdlPv(i8* nonnull %37) #5
  br label %_ZN7PochiVM16ReflectionHelper25destructor_wrapper_helperISt6vectorIiSaIiEEE9wrapperFnEPS4_.exit

_ZN7PochiVM16ReflectionHelper25destructor_wrapper_helperISt6vectorIiSaIiEEE9wrapperFnEPS4_.exit: ; preds = %landing_pad_0, %36
  resume { i8*, i32 } %33

_Z13CopyVectorIntPSt6vectorIiSaIiEES2_.exit:      ; preds = %_ZN7PochiVM16ReflectionHelper26constructor_wrapper_helperISt6vectorIiSaIiEEJRKS4_EE4callIJPS5_EEEvPS4_DpT_.exit
  %38 = load i32*, i32** %17, align 8, !tbaa !10
  %39 = icmp eq i32* %38, null
  br i1 %39, label %_ZN7PochiVM16ReflectionHelper25destructor_wrapper_helperISt6vectorIiSaIiEEE9wrapperFnEPS4_.exit1, label %40

40:                                               ; preds = %_Z13CopyVectorIntPSt6vectorIiSaIiEES2_.exit
  %41 = bitcast i32* %38 to i8*
  call void @_ZdlPv(i8* nonnull %41) #5
  br label %_ZN7PochiVM16ReflectionHelper25destructor_wrapper_helperISt6vectorIiSaIiEEE9wrapperFnEPS4_.exit1

_ZN7PochiVM16ReflectionHelper25destructor_wrapper_helperISt6vectorIiSaIiEEE9wrapperFnEPS4_.exit1: ; preds = %_Z13CopyVectorIntPSt6vectorIiSaIiEES2_.exit, %40
  ret void
}

attributes #0 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn }

!llvm.ident = !{!0, !0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 7, !"Dwarf Version", i32 4}
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{!5, !7, i64 8}
!5 = !{!"_ZTSSt12_Vector_baseIiSaIiEE", !6, i64 0}
!6 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE12_Vector_implE", !7, i64 0, !7, i64 8, !7, i64 16}
!7 = !{!"any pointer", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C++ TBAA"}
!10 = !{!5, !7, i64 0}
!11 = !{!5, !7, i64 16}
!12 = !{!7, !7, i64 0}
