; ModuleID = 'test'
source_filename = "test"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TestNonTrivialCopyConstructor = type { i32 }

@_ZTI29TestNonTrivialCopyConstructor = external dso_local constant { i8*, i8* }
@_ZN29TestNonTrivialCopyConstructor7counterE = external dso_local local_unnamed_addr global i32, align 4

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZN7PochiVM16ReflectionHelper25destructor_wrapper_helperI29TestNonTrivialCopyConstructorE9wrapperFnEPS2_(%struct.TestNonTrivialCopyConstructor* %0) #0 align 2 {
  ret void
}

; Function Attrs: uwtable
define available_externally dso_local void @_ZN7PochiVM16ReflectionHelper26constructor_wrapper_helperI29TestNonTrivialCopyConstructorJiEE4callIJiEEEvPS2_DpT_(%struct.TestNonTrivialCopyConstructor* %0, i32 %1) #1 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = getelementptr inbounds %struct.TestNonTrivialCopyConstructor, %struct.TestNonTrivialCopyConstructor* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 4, !tbaa !4
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @__cxa_allocate_exception(i64) #2

; Function Attrs: nounwind
declare dso_local void @__cxa_free_exception(i8*) #2

declare dso_local void @__cxa_throw(i8*, i8*, i8*)

; Function Attrs: uwtable
define available_externally dso_local void @_ZN7PochiVM16ReflectionHelper26constructor_wrapper_helperI29TestNonTrivialCopyConstructorJRKS2_EE4callIJPS3_EEEvPS2_DpT_(%struct.TestNonTrivialCopyConstructor* %0, %struct.TestNonTrivialCopyConstructor* %1) #1 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = load i32, i32* @_ZN29TestNonTrivialCopyConstructor7counterE, align 4, !tbaa !9
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* @_ZN29TestNonTrivialCopyConstructor7counterE, align 4, !tbaa !9
  %5 = getelementptr inbounds %struct.TestNonTrivialCopyConstructor, %struct.TestNonTrivialCopyConstructor* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4, !tbaa !4
  %7 = getelementptr inbounds %struct.TestNonTrivialCopyConstructor, %struct.TestNonTrivialCopyConstructor* %0, i64 0, i32 0
  store i32 %6, i32* %7, align 4, !tbaa !4
  ret void
}

define void @testfn(i32 %_param_0) personality i32 (...)* @__gxx_personality_v0 {
entry:
  %param_0 = alloca i32
  %var_1 = alloca %struct.TestNonTrivialCopyConstructor
  %_cur_exception_object = alloca i8*
  %_cur_exception_type = alloca i32
  br label %body

body:                                             ; preds = %entry
  store i32 %_param_0, i32* %param_0
  %0 = load i32, i32* %param_0
  call void @_ZN7PochiVM16ReflectionHelper26constructor_wrapper_helperI29TestNonTrivialCopyConstructorJiEE4callIJiEEEvPS2_DpT_(%struct.TestNonTrivialCopyConstructor* %var_1, i32 %0)
  %1 = call i8* @__cxa_allocate_exception(i64 4)
  %2 = bitcast i8* %1 to %struct.TestNonTrivialCopyConstructor*
  invoke void @_ZN7PochiVM16ReflectionHelper26constructor_wrapper_helperI29TestNonTrivialCopyConstructorJRKS2_EE4callIJPS3_EEEvPS2_DpT_(%struct.TestNonTrivialCopyConstructor* %2, %struct.TestNonTrivialCopyConstructor* %var_1)
          to label %10 unwind label %landing_pad_0

resume_exception:                                 ; preds = %dtor_tree_0
  %3 = load i8*, i8** %_cur_exception_object
  %4 = load i32, i32* %_cur_exception_type
  %5 = insertvalue { i8*, i32 } undef, i8* %3, 0
  %6 = insertvalue { i8*, i32 } %5, i32 %4, 1
  resume { i8*, i32 } %6

dtor_tree_0:                                      ; preds = %landing_pad_1, %dtor_tree_1
  call void @_ZN7PochiVM16ReflectionHelper25destructor_wrapper_helperI29TestNonTrivialCopyConstructorE9wrapperFnEPS2_(%struct.TestNonTrivialCopyConstructor* %var_1)
  br label %resume_exception

dtor_tree_1:                                      ; preds = %landing_pad_0
  call void @__cxa_free_exception(i8* %1)
  br label %dtor_tree_0

landing_pad_0:                                    ; preds = %body
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %_cur_exception_object
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %_cur_exception_type
  br label %dtor_tree_1

10:                                               ; preds = %body
  invoke void @__cxa_throw(i8* %1, i8* bitcast ({ i8*, i8* }* @_ZTI29TestNonTrivialCopyConstructor to i8*), i8* bitcast (void (%struct.TestNonTrivialCopyConstructor*)* @_ZN7PochiVM16ReflectionHelper25destructor_wrapper_helperI29TestNonTrivialCopyConstructorE9wrapperFnEPS2_ to i8*))
          to label %14 unwind label %landing_pad_1

landing_pad_1:                                    ; preds = %10
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  store i8* %12, i8** %_cur_exception_object
  %13 = extractvalue { i8*, i32 } %11, 1
  store i32 %13, i32* %_cur_exception_type
  br label %dtor_tree_0

14:                                               ; preds = %10
  unreachable
}

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.ident = !{!0, !0, !0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 7, !"Dwarf Version", i32 4}
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
!4 = !{!5, !6, i64 0}
!5 = !{!"_ZTS29TestNonTrivialCopyConstructor", !6, i64 0}
!6 = !{!"int", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!6, !6, i64 0}
