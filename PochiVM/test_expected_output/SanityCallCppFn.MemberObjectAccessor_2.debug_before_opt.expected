; ModuleID = 'test'
source_filename = "test"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::pair.153" = type { i32, double }

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind optnone uwtable
define available_externally dso_local dereferenceable(8) double* @_ZN7PochiVM16ReflectionHelper30member_object_accessor_wrapperIXadL_ZNSt4pairIidE6secondEEEE9wrapperFnEPS3_(%"struct.std::pair.153"* %0) #0 align 2 {
  %2 = alloca %"struct.std::pair.153"*, align 8
  store %"struct.std::pair.153"* %0, %"struct.std::pair.153"** %2, align 8
  %3 = load %"struct.std::pair.153"*, %"struct.std::pair.153"** %2, align 8
  %4 = bitcast %"struct.std::pair.153"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to double*
  ret double* %6
}

define void @testfn(%"struct.std::pair.153"* %_param_0, double %_param_1) personality i32 (...)* @__gxx_personality_v0 {
entry:
  %param_0 = alloca %"struct.std::pair.153"*
  %param_1 = alloca double
  br label %body

body:                                             ; preds = %entry
  store %"struct.std::pair.153"* %_param_0, %"struct.std::pair.153"** %param_0
  store double %_param_1, double* %param_1
  %0 = load double, double* %param_1
  %1 = load %"struct.std::pair.153"*, %"struct.std::pair.153"** %param_0
  %2 = call double* @_ZN7PochiVM16ReflectionHelper30member_object_accessor_wrapperIXadL_ZNSt4pairIidE6secondEEEE9wrapperFnEPS3_(%"struct.std::pair.153"* %1)
  store double %0, double* %2
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 7, !"Dwarf Version", i32 4}
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
