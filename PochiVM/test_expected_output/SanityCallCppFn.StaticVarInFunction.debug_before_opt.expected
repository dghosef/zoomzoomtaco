; ModuleID = 'test'
source_filename = "test"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@_ZZ23TestStaticVarInFunctionbE1x = external dso_local global i32, align 4

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind optnone uwtable
define available_externally dso_local i32 @_Z23TestStaticVarInFunctionb(i1 zeroext %0) #0 {
  %2 = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, i8* %2, align 1
  %4 = load i8, i8* %2, align 1
  %5 = trunc i8 %4 to i1
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i32 123, i32* @_ZZ23TestStaticVarInFunctionbE1x, align 4
  br label %10

7:                                                ; preds = %1
  %8 = load i32, i32* @_ZZ23TestStaticVarInFunctionbE1x, align 4
  %9 = add nsw i32 %8, 12
  store i32 %9, i32* @_ZZ23TestStaticVarInFunctionbE1x, align 4
  br label %10

10:                                               ; preds = %7, %6
  %11 = load i32, i32* @_ZZ23TestStaticVarInFunctionbE1x, align 4
  ret i32 %11
}

define i32 @testfn() personality i32 (...)* @__gxx_personality_v0 {
entry:
  br label %body

body:                                             ; preds = %entry
  %0 = call i32 @_Z23TestStaticVarInFunctionb(i1 false)
  ret i32 %0
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 7, !"Dwarf Version", i32 4}
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
