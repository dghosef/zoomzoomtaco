; ModuleID = 'test'
source_filename = "test"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TestNonTrivialCopyConstructor = type { i32 }

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: noinline optnone uwtable
define available_externally dso_local i32 @_ZN7PochiVM16ReflectionHelper23function_wrapper_helperIXadL_ZN29TestNonTrivialCopyConstructor2FnES2_EEE15call_fn_wrapperIivE4callIJPS2_EEEiDpT_(%struct.TestNonTrivialCopyConstructor* %0) #0 align 2 {
  %2 = alloca %struct.TestNonTrivialCopyConstructor*, align 8
  store %struct.TestNonTrivialCopyConstructor* %0, %struct.TestNonTrivialCopyConstructor** %2, align 8
  %3 = load %struct.TestNonTrivialCopyConstructor*, %struct.TestNonTrivialCopyConstructor** %2, align 8
  %4 = call i32 @_ZN7PochiVM16ReflectionHelper23function_wrapper_helperIXadL_ZN29TestNonTrivialCopyConstructor2FnES2_EEE12call_fn_implIiJPS2_EEET_DpT0_(%struct.TestNonTrivialCopyConstructor* %3)
  ret i32 %4
}

; Function Attrs: noinline optnone uwtable
declare dso_local i32 @_ZN7PochiVM16ReflectionHelper23function_wrapper_helperIXadL_ZN29TestNonTrivialCopyConstructor2FnES2_EEE12call_fn_implIiJPS2_EEET_DpT0_(%struct.TestNonTrivialCopyConstructor*) #0 align 2

define i32 @testfn(%struct.TestNonTrivialCopyConstructor* %_param_0) personality i32 (...)* @__gxx_personality_v0 {
entry:
  %param_0 = alloca %struct.TestNonTrivialCopyConstructor*
  br label %body

body:                                             ; preds = %entry
  store %struct.TestNonTrivialCopyConstructor* %_param_0, %struct.TestNonTrivialCopyConstructor** %param_0
  %0 = load %struct.TestNonTrivialCopyConstructor*, %struct.TestNonTrivialCopyConstructor** %param_0
  %1 = call i32 @_ZN7PochiVM16ReflectionHelper23function_wrapper_helperIXadL_ZN29TestNonTrivialCopyConstructor2FnES2_EEE15call_fn_wrapperIivE4callIJPS2_EEEiDpT_(%struct.TestNonTrivialCopyConstructor* %0)
  ret i32 %1
}

attributes #0 = { noinline optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}
!llvm.module.flags = !{!1, !2, !3}

!0 = !{!"clang version 10.0.0 "}
!1 = !{i32 7, !"Dwarf Version", i32 4}
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"wchar_size", i32 4}
